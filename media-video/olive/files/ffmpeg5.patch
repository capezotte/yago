diff --git a/dialogs/advancedvideodialog.cpp b/dialogs/advancedvideodialog.cpp
index c4e910d..eea4916 100644
--- a/dialogs/advancedvideodialog.cpp
+++ b/dialogs/advancedvideodialog.cpp
@@ -44,7 +44,7 @@ AdvancedVideoDialog::AdvancedVideoDialog(QWidget *parent,
   int row = 0;
 
   // get encoder information for this codec from FFmpeg
-  AVCodec* codec_info = avcodec_find_encoder(static_cast<AVCodecID>(encoding_codec));
+  const AVCodec* codec_info = avcodec_find_encoder(static_cast<AVCodecID>(encoding_codec));
 
   // set up grid layout for dialog
   QGridLayout* layout = new QGridLayout(this);
diff --git a/dialogs/exportdialog.cpp b/dialogs/exportdialog.cpp
index db4b693..ed93f0d 100644
--- a/dialogs/exportdialog.cpp
+++ b/dialogs/exportdialog.cpp
@@ -121,7 +121,7 @@ ExportDialog::ExportDialog(QWidget *parent) :
 void ExportDialog::add_codec_to_combobox(QComboBox* box, enum AVCodecID codec) {
   QString codec_name;
 
-  AVCodec* codec_info = avcodec_find_encoder(codec);
+  const AVCodec* codec_info = avcodec_find_encoder(codec);
 
   if (codec_info == nullptr) {
     codec_name = tr("Unknown codec name %1").arg(static_cast<int>(codec));
@@ -630,7 +630,7 @@ void ExportDialog::vcodec_changed(int index) {
     }
 
     // set default pix_fmt for this codec
-    AVCodec* codec_info = avcodec_find_encoder(static_cast<AVCodecID>(vcodecCombobox->itemData(index).toInt()));
+    const AVCodec* codec_info = avcodec_find_encoder(static_cast<AVCodecID>(vcodecCombobox->itemData(index).toInt()));
     if (codec_info == nullptr) {
       QMessageBox::critical(this,
                             tr("Invalid Codec"),
diff --git a/project/previewgenerator.cpp b/project/previewgenerator.cpp
index f14fe8d..3d152ff 100644
--- a/project/previewgenerator.cpp
+++ b/project/previewgenerator.cpp
@@ -260,7 +260,7 @@ void PreviewGenerator::generate_waveform() {
     // and only if the thumbnail and waveform sizes are > 0
     if ((fmt_ctx_->streams[i]->codecpar->codec_type == AVMEDIA_TYPE_VIDEO && olive::CurrentConfig.thumbnail_resolution > 0)
         || (fmt_ctx_->streams[i]->codecpar->codec_type == AVMEDIA_TYPE_AUDIO && olive::CurrentConfig.waveform_resolution > 0)) {
-      AVCodec* codec = avcodec_find_decoder(fmt_ctx_->streams[i]->codecpar->codec_id);
+      const AVCodec* codec = avcodec_find_decoder(fmt_ctx_->streams[i]->codecpar->codec_id);
       if (codec != nullptr) {
 
         // alloc the context and load the params into it
diff --git a/project/proxygenerator.cpp b/project/proxygenerator.cpp
index 6a6cd11..a87d738 100644
--- a/project/proxygenerator.cpp
+++ b/project/proxygenerator.cpp
@@ -91,10 +91,10 @@ void ProxyGenerator::transcode(const ProxyInfo& info) {
     out_stream->id = in_stream->id;
 
     // find decoder for this codec
-    AVCodec* dec_codec = avcodec_find_decoder(in_stream->codecpar->codec_id);
+    const AVCodec* dec_codec = avcodec_find_decoder(in_stream->codecpar->codec_id);
 
     // find encoder for chosen proxy type
-    AVCodec* enc_codec = avcodec_find_encoder(temp_enc_codec);
+    const AVCodec* enc_codec = avcodec_find_encoder(temp_enc_codec);
 
     // we only transcode video streams, others we just passthrough
     if (in_stream->codecpar->codec_type == AVMEDIA_TYPE_VIDEO && dec_codec != nullptr) {
diff --git a/rendering/cacher.cpp b/rendering/cacher.cpp
index 9b23bbf..d0b8d6e 100644
--- a/rendering/cacher.cpp
+++ b/rendering/cacher.cpp
@@ -254,7 +254,7 @@ void Cacher::CacheAudioWorker() {
                     dout << "starting rev_frame";
 #endif
                     rev_frame->nb_samples = 0;
-                    rev_frame->pts = frame_->pkt_pts;
+                    rev_frame->pts = frame_->pts;
                   }
                   int offset = rev_frame->nb_samples * av_get_bytes_per_sample(static_cast<AVSampleFormat>(rev_frame->format)) * rev_frame->channels;
 #ifdef AUDIOWARNINGS
diff --git a/rendering/cacher.h b/rendering/cacher.h
index 2b5f827..8512218 100644
--- a/rendering/cacher.h
+++ b/rendering/cacher.h
@@ -415,7 +415,7 @@ private:
   /**
    * @brief FFmpeg codec reference
    */
-  AVCodec* codec;
+  const AVCodec* codec;
 
   /**
    * @brief Options set by the cacher for FFmpeg's decoders (settings like multithreading or other optimizations)
diff --git a/rendering/exportthread.h b/rendering/exportthread.h
index 3282217..70ac6b1 100644
--- a/rendering/exportthread.h
+++ b/rendering/exportthread.h
@@ -101,13 +101,13 @@ private:
 
   AVFormatContext* fmt_ctx;
   AVStream* video_stream;
-  AVCodec* vcodec;
+  const AVCodec* vcodec;
   AVCodecContext* vcodec_ctx;
   AVFrame* video_frame;
   AVFrame* sws_frame;
   SwsContext* sws_ctx;
   AVStream* audio_stream;
-  AVCodec* acodec;
+  const AVCodec* acodec;
   AVFrame* audio_frame;
   AVFrame* swr_frame;
   AVCodecContext* acodec_ctx;
